<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gxu.tour.mapper.LfmMapper" >

    <!--获取用户日志-->
    <select id="getLfmData" resultType="com.gxu.tour.entity.Log" >
        select *
        from log
        where DATE_SUB(CURDATE(),INTERVAL 3 YEAR) &lt;= create_time and product_type='2'
  </select>

    <!--获取路线组合产品信息-->
    <select id="getRouteRecById" resultType="com.gxu.tour.entity.Route" >
        select *
        from route
        where route_id = #{routeID}
  </select>

    <!---->
    <select id="getRouteByTop" resultType="com.gxu.tour.entity.RouteCount" >
        select product_id,product_name,count(1) as num
        from log
        where product_type=2 and behavior_type=2
        group by product_id,product_name
        order by num
        desc limit 10;

  </select>

    <!--离线获取路线产品-->
    <select id="getRouteRecById_off" resultType="java.lang.String" >
      	 select recommend
      	 from recommend_route
      	 where user_id = #{user_id}
    </select>

    <!--插入离线产品表-->
    <insert id="insertRoute_off">
        insert into recommend_route(user_id,recommend)
        values(#{user_id},#{recommend})
    </insert>

    <!--更新离线产品表-->
    <update id="updatetRoute_off" parameterType="java.lang.String" >
        update  recommend_route
        <set>
          recommend=#{recommend}
        </set>
        where  user_id=#{user_id}
    </update>

    <!--//////////////分割线，以下是景点推荐///////////////////////////-->
    <!--获取用户日志,景点推荐-->
    <select id="getSceneData" resultType="com.gxu.tour.entity.Log" >
        select *
        from log
        where DATE_SUB(CURDATE(),INTERVAL 3 YEAR) &lt;= create_time and product_type='1'
  </select>

    <!--获取景点具体信息-->
    <select id="getSceneRecById" resultType="com.gxu.tour.entity.Scene" >
        select *
        from scene
        where scene_id = #{sceneID}
  </select>

    <!--获取用户日志中购买量前10点景点-->
    <select id="getSceneByTop" resultType="com.gxu.tour.entity.RouteCount" >
        select product_id,product_name,count(1) as num
        from log
        where product_type=1 and behavior_type=2
        group by product_id,product_name
        order by num
        desc limit 10;

  </select>


    <!--离线获取景区产-->
    <select id="getSceneRecById_off" resultType="string" >
      	 select recommend
      	 from recommend_scene
      	 where user_id = #{user_id}
    </select>

    <!--插入离线景点表-->
    <insert id="insertScene_off">
        insert into recommend_scene(user_id,recommend)
        values(#{user_id},#{recommend})
    </insert>

    <!--更新离线景点表-->
    <update id="updatetScene_off" parameterType="java.lang.String" >
        update  recommend_scene
        <set>
            recommend=#{recommend}
        </set>
        where  user_id=#{user_id}
    </update>

</mapper>